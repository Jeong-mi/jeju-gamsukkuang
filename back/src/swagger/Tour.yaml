paths:
  /tour?name={name}:
    get:
      tags:
        - Tour
      summary: 랜드마크 정보 불러오기
      description: /tour?name={name}으로 랜드마크의 이름, 상세정보, 최근 리뷰, 평점을 불러옵니다.
      parameters:
        - name: name
          in: query
          required: true
          schema:
            type: string
          description: 해당 랜드마크의 영문명입니다.
      responses:
        "200":
          description: 해당 랜드마크 정보 불러오기 성공
        "400":
          description: DB에 요청된 랜드마크가 없을 때 오류가 발생합니다.

  /tour?name={name}/:
    post:
      tags:
        - Tour
      summary: 랜드마크
      security:
        - Authorization: []
      description: /tour?name={name}으로 리뷰와 평점을 등록합니다. 단, 로그인된 사용자만 사용 가능하며, 랜드마크 당 사용자는 1개의 리뷰만 작성 가능합니다. url 맨 뒤의 /는 없어도 됩니다.
      parameters:
        - name: name
          in: query
          required: true
          schema:
            type: string
          description: 해당 랜드마크의 영문명입니다.
      requestBody:
        required: true
        description: 리뷰의 내용과 평점을 req.body에 필수적으로 받습니다.
        content:
          application/json:
            schema:
              type: object
              example:
                { "review": "바다가 차갑고 초원이 좋았어요.", "rating": 0.5 }
      responses:
        "201":
          description: 해당 랜드마크에 사용자의 리뷰와 평점 등록 완료
        "400":
          description: 해당 랜드마크에 사용자가 이미 리뷰를 남겼을 때, req.body에 공란이 있을 때, 잘못된 요청이 있을 때 오류가 발생합니다.

  /tour?name={name}//:
    put:
      tags:
        - Tour
      summary: 랜드마크 평가 수정하기
      security:
        - Authorization: []
      description: /tour?name={name}으로 등록된 리뷰와 평점을 수정 요청합니다. 단, 해당 리뷰를 작성한 사용자만 사용 가능합니다. url 맨 뒤의 //는 없어도 됩니다.
      parameters:
        - name: name
          in: query
          required: true
          schema:
            type: string
          description: 해당 랜드마크의 영문명입니다.
      requestBody:
        required: true
        description: 리뷰의 내용과 평점을 req.body에 필수적으로 받습니다.
        content:
          application/json:
            schema:
              type: object
              example:
                { "review": "바다가 차갑고 초원이 좋았어요.", "rating": 0.5 }
      responses:
        "201":
          description: 해당 랜드마크에 사용자의 리뷰와 평점 수정 완료
        "400":
          description: 해당 리뷰를 작성한 사용자가 아닐 때, req.body에 공란이 있을 때, 잘못된 요청이 있을 때 오류가 발생합니다.

  /landmark:
    post:
      tags:
        - Tour
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              example: { "cid": "cid" }
