paths:
  /review:
    post:
      tags:
        - Review
      summary: 리뷰 작성
      security:
        - Authorization: []
      description: /review로 리뷰 등록 요청을 보냅니다.
      requestBody:
        description: 랜드마크 id, 리뷰 내용, 별점을 필수 req.body로 받습니다.
        content:
          application/json:
            schema:
              type: object
              properties:
                tourId:
                  type: string
                  required: true
                  default: 46748ca6-4a6d-4ed7-bef7-4f40452f6fa0
                content:
                  type: string
                  required: true
                  default: 리뷰 테스트 중입니다, 내용.
                rating:
                  type: integer
                  required: true
                  default: 4
      responses:
        "201":
          description: 리뷰 등록 성공
        "400":
          description: 필수인 필드(tourId, content, rating)가 없을 시 오류가 발생합니다.
        "403":
          description: 로그인되어 있지 않을 때 오류가 발생합니다.

  /review/{tourId}/list:
    get:
      tags:
        - Review
      summary: 해당 랜드마크의 리뷰 목록
      description: /review/:tourId/list로 해당 랜드마크의 리뷰 목록을 요청합니다.
      parameters:
        - name: tourId
          in: path
          required: true
          schema:
            type: string
          description: 해당 랜드마크의 id를 입력해주세요.
          default: 46748ca6-4a6d-4ed7-bef7-4f40452f6fa0
        - name: page
          in: query
          required: true
          schema:
            type: number
          description: 현재 page입니다.
          default: 1
        - name: limit
          in: query
          required: true
          schema:
            type: number
          description: 페이지 당 출력되는 리뷰 수입니다. 아무 것도 넣지 않을 경우, 기본 10으로 설정됩니다.
          default: 10
      responses:
        "200":
          description: 랜드마크의 리뷰 목록 불러오기 성공
        "400":
          description: tourId를 입력하지 않을 시 오류가 발생합니다.

  /review/{tourId}/info:
    get:
      tags:
        - Review
      summary: 해당 랜드마크의 리뷰 요약
      description: /review/:tourId/info로 해당 랜드마크의 리뷰 요약을 요청합니다.
      parameters:
        - name: tourId
          in: path
          required: true
          schema:
            type: string
          description: 해당 랜드마크의 id를 입력해주세요.
          default: 46748ca6-4a6d-4ed7-bef7-4f40452f6fa0
      responses:
        "200":
          description: 랜드마크의 리뷰 목록 불러오기 성공
        "400":
          description: tourId를 입력하지 않을 시 오류가 발생합니다.

  /review/{id}:
    put:
      tags:
        - Review
      summary: 리뷰 수정
      security:
        - Authorization: []
      description: /review로 리뷰 수정 요청을 보냅니다.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: 해당 리뷰의 id를 입력해주세요.
      requestBody:
        description: 리뷰 내용, 별점을 필수 req.body로 받습니다.
        content:
          application/json:
            schema:
              type: object
              properties:
                tourId:
                  type: string
                  required: true
                  default: 46748ca6-4a6d-4ed7-bef7-4f40452f6fa0
                content:
                  type: string
                  required: true
                  default: 리뷰 테스트 수정 중입니다, 내용.
                rating:
                  type: integer
                  required: true
                  default: 2
      responses:
        "201":
          description: 리뷰 수정 성공
        "400":
          description: 리뷰 아이디가 정확하지 않거나, 리뷰 작성자 본인이 아닐 시 오류가 발생합니다.
        "403":
          description: 로그인되어 있지 않을 때 오류가 발생합니다.

  /review/{id}/:
    delete:
      tags:
        - Review
      summary: 리뷰 삭제
      security:
        - Authorization: []
      description: /review/:id로 해당 리뷰 삭제를 요청합니다.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: 해당 리뷰의 id를 입력해주세요.
      responses:
        "200":
          description: 리뷰 삭제 성공
        "400":
          description: 리뷰 아이디가 정확하지 않거나, 리뷰 작성자 본인이 아닐 시 오류가 발생합니다.
        "403":
          description: 로그인되어 있지 않을 때 오류가 발생합니다.
